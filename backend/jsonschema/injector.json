{
  "$extends": [
    "@hostmatcher",
    "@urlmatcher"
  ],
  "$friendlyName": "Injector",
  "$friendlyNamePlural": "Injectors",
  "$modelName": "Injector",
  "$modelPackage": "lain",
  "$modelResourceName": "injectors",
  "$modelRestName": "injector",
  "additionalProperties": false,
  "description": "TODO.",
  "properties": {
    "delayXHRPatching": {
      "$friendlyName": "Delay XHR Patching",
      "description": "Since JS world is the mess we all know, there are some cases when we must delay the monkey patching of the XHR request.",
      "title": "delayXHRPatching",
      "type": [
        "boolean",
        "null"
      ]
    },
    "disableBodyReplacement": {
      "$friendlyName": "Disable Body Replacement",
      "description": "If this is true, the acuvity popup will be shown on top the existing body of the provider, instead of replacing it. It usually causes a lot of issue, but on some weirdos (microsoft), it's the opposite.",
      "title": "disableBodyReplacement",
      "type": [
        "boolean",
        "null"
      ]
    },
    "hosts": {
      "$friendlyName": "Hosts",
      "description": "Optional hosts to match. This is useful in case the provider has multiple hosts to discriminate which logger to use.",
      "items": {
        "type": [
          "string",
          "null"
        ]
      },
      "title": "hosts",
      "type": "array"
    },
    "method": {
      "$friendlyName": "Method",
      "$required": true,
      "description": "The method to match.",
      "enum": [
        "Post",
        "Put",
        "Patch",
        "Get",
        "Delete",
        "Options",
        "Head"
      ],
      "title": "method"
    },
    "path": {
      "$friendlyName": "Path",
      "$required": true,
      "description": "A regular expression to match a URL path to log.",
      "title": "path",
      "type": "string"
    }
  },
  "required": [
    "method",
    "path"
  ],
  "title": "Injector",
  "type": "object"
}