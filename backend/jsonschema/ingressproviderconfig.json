{
  "$extends": [],
  "$friendlyName": "Ingress Provider Config",
  "$friendlyNamePlural": "Ingress Provider Configs",
  "$modelName": "IngressProviderConfig",
  "$modelPackage": "lain",
  "$modelResourceName": "ingressproviderconfigs",
  "$modelRestName": "ingressproviderconfig",
  "additionalProperties": false,
  "description": "Represents the configuration if an apex is to act as an ingress for a provider.",
  "properties": {
    "dialTLS": {
      "$defaultValue": "Preserve",
      "$friendlyName": "Dial TLS",
      "description": "This option controls the dialing behaviour of the apex to the origin server. Should be explicitly set to enabled if the origin expects TLS connections. And vice versa it should be set to disabled if the origin expects connections in plaintext. By default this setting is set to preserve which means that the apex is going to dial using whatever mode it terminated its own connection with: if the apex received a TLS connection, it will dial TLS, if it received a plaintext connection, then it will dial plaintext. The apex receiving behaviour can be controlled with the listenTLS option. As a last resort this setting can be set to auto which means that the apex is going to probe the origin server to determine if it needs to dial using TLS or not. Note that this is potentially sending a TLS Client Hello to a plaintext HTTP server which is not expecting that. Therefore, this option is not recommended if it can be avoided. This setting is ignored in mirror mode.",
      "enum": [
        "Preserve",
        "Auto",
        "Enabled",
        "Disabled"
      ],
      "title": "dialTLS"
    },
    "listenPort": {
      "$friendlyName": "Listen Port",
      "$required": true,
      "description": "The listening port. For appcomponent configurations this is the listening port that traffic will be intercepted on or mirrored from.",
      "maximum": 65535,
      "minimum": 1,
      "title": "listenPort",
      "type": "integer"
    },
    "listenTLS": {
      "$defaultValue": "Auto",
      "$friendlyName": "Listen TLS",
      "description": "This option controls the receiving behaviour of connection to the apex before they are going to be proxied to the origin server. To control the dialing behaviour of the apex towards the origin server use the dialTLS option. Should be explicitly set to enabled if the listener expects TLS connections. And vice versa it should be set to disabled if the listener expects connections in plaintext. By default this setting is set to auto which means that the listener will automatically determine if incoming connections are TLS or not: TLS connections will be accepted, as well as  plain TCP connections will be accepted, both on the configured listenPort. This setting is ignored in mirror mode.",
      "enum": [
        "Auto",
        "Enabled",
        "Disabled"
      ],
      "title": "listenTLS"
    },
    "listenTLSCert": {
      "$friendlyName": "Listen TLS Certificate",
      "description": "Optional PEM encoded X509v3 certificate to use for the listener for this provider. This setting will be ignored if listenMode is not TLS or Auto or mode is not Inline. However, this setting is required if listenTLSKey is set.",
      "title": "listenTLSCert",
      "type": [
        "string",
        "null"
      ]
    },
    "listenTLSKey": {
      "$friendlyName": "Listen TLS Key",
      "description": "Optional PEM encoded key pair to use for the listener for this provider. This setting will be ignored if listenMode is not TLS or Auto or mode is not Inline. However, this setting is required if listenTLSCert is set.",
      "title": "listenTLSKey",
      "type": [
        "string",
        "null"
      ]
    },
    "mode": {
      "$defaultValue": "Disabled",
      "$friendlyName": "Mode",
      "description": "The ingress datapath mode to use for network traffic arriving for this ingress provider for this application component. By default this is set to disabled. However, this can be changed to mirror traffic where the Apex is only providing visibility with no possibility of any access or content policies to take effect. Or this can be set to inline in which case all traffic to providers will be redirected to the Apex which acts as a transparent proxy in this case. In this mode access and content policies will take effect.",
      "enum": [
        "Disabled",
        "Mirror",
        "Inline"
      ],
      "title": "mode"
    }
  },
  "required": [
    "listenPort"
  ],
  "title": "IngressProviderConfig",
  "type": "object"
}