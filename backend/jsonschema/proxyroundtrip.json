{
  "$extends": [
    "@identifiable",
    "@importable",
    "@principalable",
    "@traceable",
    "@destinationable",
    "@pipelinepasstype",
    "@tubularpipelinepass"
  ],
  "$friendlyName": "ProxyRoundtrip",
  "$friendlyNamePlural": "ProxyRoundtrips",
  "$modelName": "ProxyRoundtrip",
  "$modelPackage": "colektor",
  "$modelResourceName": "proxyroundtrips",
  "$modelRestName": "proxyroundtrip",
  "additionalProperties": false,
  "description": "This is a Proxy roundtrip.",
  "properties": {
    "ID": {
      "$friendlyName": "ID",
      "$readOnly": true,
      "description": "ID is the identifier of the object.",
      "title": "ID",
      "type": [
        "string",
        "null"
      ]
    },
    "alerts": {
      "$friendlyName": "Alerts",
      "description": "List of alerts that got raised during the policy resolution.",
      "items": {
        "$ref": "alertevent.json"
      },
      "title": "alerts",
      "type": "array"
    },
    "annotations": {
      "$friendlyName": "Annotations",
      "additionalProperties": {
        "type": "string"
      },
      "description": "Annotations attached to the log.",
      "title": "annotations",
      "type": "object"
    },
    "client": {
      "$friendlyName": "Client",
      "description": "The client used to send the request.",
      "title": "client",
      "type": [
        "string",
        "null"
      ]
    },
    "clientVersion": {
      "$friendlyName": "Client Version",
      "description": "The version of the client used to send the request.",
      "title": "clientVersion",
      "type": [
        "string",
        "null"
      ]
    },
    "decision": {
      "$friendlyName": "Decision",
      "description": "Tell what was the decision about the data.",
      "enum": [
        "Deny",
        "Allow",
        "Ask",
        "Bypassed",
        "ForbiddenUser",
        "Skipped"
      ],
      "title": "decision"
    },
    "destination": {
      "$friendlyName": "Destination",
      "$ref": "destination.json",
      "description": "Captures all details of the destination of the request.",
      "title": "destination"
    },
    "encryptionEgress": {
      "$friendlyName": "Encryption Egress",
      "$ref": "tlsstate.json",
      "description": "The encryption details of the connection from the proxy to the origin server.",
      "title": "encryptionEgress"
    },
    "encryptionIngress": {
      "$friendlyName": "Encryption Ingress",
      "$ref": "tlsstate.json",
      "description": "The encryption details of the connection from the client to the proxy.",
      "title": "encryptionIngress"
    },
    "extractions": {
      "$friendlyName": "Extractions",
      "description": "The extractions to log.",
      "items": {
        "$ref": "extraction.json"
      },
      "title": "extractions",
      "type": "array"
    },
    "hash": {
      "$friendlyName": "Hash",
      "description": "The hash of the input.",
      "title": "hash",
      "type": [
        "string",
        "null"
      ]
    },
    "importHash": {
      "$creationOnly": true,
      "$friendlyName": "ImportHash",
      "description": "The hash of the structure used to compare with new import version.",
      "title": "importHash",
      "type": [
        "string",
        "null"
      ]
    },
    "importLabel": {
      "$creationOnly": true,
      "$friendlyName": "ImportLabel",
      "description": "The user-defined import label that allows the system to group resources from the same import operation.",
      "title": "importLabel",
      "type": [
        "string",
        "null"
      ]
    },
    "latency": {
      "$friendlyName": "Latency",
      "$ref": "latency.json",
      "description": "Information about latency of various stage of request and response.",
      "title": "latency"
    },
    "mcpMessage": {
      "$friendlyName": "MCP Message",
      "$ref": "mcpmessage.json",
      "description": "If this is an MCP message, then the MCP message details will be set here.",
      "title": "mcpMessage"
    },
    "model": {
      "$friendlyName": "Model",
      "description": "The model used by the request.",
      "title": "model",
      "type": [
        "string",
        "null"
      ]
    },
    "namespace": {
      "$friendlyName": "Namespace",
      "$readOnly": true,
      "description": "The namespace of the object.",
      "title": "namespace",
      "type": [
        "string",
        "null"
      ]
    },
    "offband": {
      "$friendlyName": "Offband",
      "description": "If true, the analysis ran offband. That means that we extracted the data from the user request, assigned team and verified access permissions, but then we forwarded the request as is to the provider untouched immediately, while running the analysis and policies in the background, reporting what we would have done.",
      "title": "offband",
      "type": [
        "boolean",
        "null"
      ]
    },
    "permissive": {
      "$friendlyName": "Permissive",
      "description": "If true, the policy has been applied in permissive mode.  That means that we extracted the data from the user request, assigned team, verified access permissions, run analysis, apply content policies and reported what we would have done, but ultimately let the request go to the provider untouched.",
      "title": "permissive",
      "type": [
        "boolean",
        "null"
      ]
    },
    "pipelineName": {
      "$friendlyName": "Pipeline Name",
      "description": "The name of the particular pipeline that extracted the text.",
      "title": "pipelineName",
      "type": [
        "string",
        "null"
      ]
    },
    "policyRefs": {
      "$friendlyName": "Policy References",
      "description": "List of references to the policies used to make this roundtrip.",
      "items": {
        "$ref": "policyref.json"
      },
      "title": "policyRefs",
      "type": "array"
    },
    "principal": {
      "$friendlyName": "Principal",
      "$ref": "principal.json",
      "$required": true,
      "description": "The principal of the object.",
      "title": "principal"
    },
    "provider": {
      "$friendlyName": "Provider",
      "description": "The provider to use.",
      "title": "provider",
      "type": [
        "string",
        "null"
      ]
    },
    "proxyFunction": {
      "$defaultValue": "ForwardProxy",
      "$friendlyName": "Proxy Function",
      "description": "Denotes the function of this proxy in the chain of servers. By default the apex always sits on the egress side between a client or application and the origin server in which case the apex acts as a forwarding proxy. However, in the case of applications the proxy can also be located before the application as an ingress provider in which case the apex acts as a reverse proxy.",
      "enum": [
        "ForwardProxy",
        "ReverseProxy"
      ],
      "title": "proxyFunction"
    },
    "reasons": {
      "$friendlyName": "Reasons",
      "description": "The various reasons returned by the policy engine.",
      "items": {
        "type": [
          "string",
          "null"
        ]
      },
      "title": "reasons",
      "type": "array"
    },
    "summary": {
      "$friendlyName": "Summary",
      "$ref": "extractionsummary.json",
      "description": "The summary of the extractions.",
      "title": "summary"
    },
    "time": {
      "$friendlyName": "Time",
      "description": "Set the time of the message request.",
      "title": "time",
      "type": [
        "string",
        "null"
      ]
    },
    "toolChoice": {
      "$friendlyName": "Tool Choice",
      "$ref": "toolchoice.json",
      "description": "Tool choice instructions for the model of a request.",
      "title": "toolChoice"
    },
    "tools": {
      "$friendlyName": "Tools",
      "additionalProperties": {
        "$ref": "tool.json"
      },
      "description": "The various tools used by the request.",
      "title": "tools",
      "type": "object"
    },
    "trace": {
      "$friendlyName": "Trace",
      "$ref": "traceref.json",
      "description": "References to the trace of the request.",
      "title": "trace"
    },
    "type": {
      "$friendlyName": "Type",
      "description": "The type of text.",
      "enum": [
        "Input",
        "Output"
      ],
      "title": "type"
    }
  },
  "required": [
    "principal"
  ],
  "title": "ProxyRoundtrip",
  "type": "object"
}